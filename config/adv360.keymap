#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none       &kp N1       &kp N2  &kp N3          &kp N4           &kp N5  &none                                                            &none                  &kp N6  &kp N7            &kp N8               &kp N9   &kp N0                       &none
&kp DELETE  &kp Q        &kp W   &kp E           &kp R            &kp T   &kp LG(C)                                                        &kp LG(Z)              &kp Y   &kp U             &kp I                &kp O    &kp P                        &kp DOUBLE_QUOTES
&kp TAB     &hm LCTRL A  &kp S   &kp D           &kp F            &kp G   &kp LG(V)             &none  &none         &none          &none  &kp LS(LG(Z))          &kp H   &kp J             &kp K                &kp L    &hm RIGHT_CONTROL SEMICOLON  &kp SQT
&kp ESCAPE  &kp Z        &kp X   &hm LEFT_ALT C  &hm LEFT_META V  &kp B                                &kp HOME      &kp PAGE_UP                                  &kp N   &hm RIGHT_META M  &hm RIGHT_ALT COMMA  &kp DOT  &kp FSLH                     &kp BACKSPACE
&none       &none        &none   &none           &sk LEFT_SHIFT           &hm LEFT_SHIFT SPACE  &sl 2  &kp END       &kp PAGE_DOWN  &sl 2  &hm RIGHT_SHIFT ENTER          &sk LEFT_SHIFT    &kp SPACE            &none    &kp GRAVE                    &none
            >;
        };

        WIN {
            bindings = <
&none       &kp N1          &kp N2  &kp N3           &kp N4              &kp N5  &none                                                            &none                  &kp N6  &kp N7               &kp N8                &kp N9   &kp N0                   &none
&kp DELETE  &kp Q           &kp W   &kp E            &kp R               &kp T   &kp LC(C)                                                        &kp LC(Z)              &kp Y   &kp U                &kp I                 &kp O    &kp P                    &kp DOUBLE_QUOTES
&kp TAB     &hm LEFT_ALT A  &kp S   &kp D            &kp F               &kp G   &kp LC(V)             &none  &none         &none          &none  &kp LC(LS(Z))          &kp H   &kp J                &kp K                 &kp L    &hm RIGHT_ALT SEMICOLON  &kp SQT
&kp ESCAPE  &kp Z           &kp X   &hm LEFT_META C  &hm LEFT_CONTROL V  &kp B                                &kp HOME      &kp PAGE_UP                                  &kp N   &hm RIGHT_CONTROL M  &hm RIGHT_META COMMA  &kp DOT  &kp FSLH                 &kp BACKSPACE
&none       &none           &none   &none            &sk LEFT_SHIFT              &hm LEFT_SHIFT SPACE  &sl 2  &kp END       &kp PAGE_DOWN  &sl 2  &hm RIGHT_SHIFT ENTER          &sk LEFT_SHIFT       &kp SPACE             &none    &kp GRAVE                &none
            >;
        };

        CHARS {
            bindings = <
&none       &kp N1           &kp N2        &kp N3        &kp N4        &kp N5        &none                                                                     &none                  &kp N6                &kp N7                 &kp N8            &kp N9             &kp N0         &none
&kp DELETE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PIPE      &trans                                                                    &trans                 &kp LESS_THAN         &kp GREATER_THAN       &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp SEMICOLON  &kp DOUBLE_QUOTES
&kp CARET   &kp N0           &kp MINUS     &kp PLUS      &kp EQUAL     &kp ASTERISK  &trans                &none      &none         &none          &none       &trans                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON      &kp SQT
&kp TILDE   &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                         &kp HOME      &kp PAGE_UP                                       &kp NON_US_BACKSLASH  &kp UNDERSCORE         &kp COMMA         &kp DOT            &kp FSLH       &kp BACKSPACE
&none       &kp NUMBER_6     &kp N7        &kp N8        &kp N9                      &hm LEFT_SHIFT SPACE  &kp CARET  &kp END       &kp PAGE_DOWN  &kp DOLLAR  &hm RIGHT_SHIFT ENTER                        &sk LEFT_SHIFT         &kp SPACE         &kp PERCENT        &kp GRAVE      &kp QUESTION
            >;
        };

        movement {
            bindings = <
&none   &none   &none   &none   &none   &none   &none                                                      &none   &none           &none                     &none                      &none            &none                  &none
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                      &none   &kp HOME        &kp PAGE_DOWN             &kp PAGE_DOWN              &kp END          &kp LC(RIGHT_BRACKET)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &kp K_MUTE      &trans             &trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW            &kp UP_ARROW               &kp RIGHT_ARROW  &kp LG(LEFT_BRACKET)   &kp LG(RIGHT_BRACKET)
&trans  &trans  &trans  &trans  &trans  &trans                  &trans          &kp C_VOLUME_UP                    &trans          &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &trans           &trans                 &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans          &kp C_VOLUME_DOWN  &trans  &trans                  &trans                    &trans                     &trans           &trans                 &trans
            >;
        };

        win_movement {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
